#!/bin/sh

if test -z "$HOL2DK_DIR"
then
    echo "HOL2DK_DIR is not set"
    exit 1
fi

if test -z "$HOLLIGHT_DIR"
then
    echo "HOLLIGHT_DIR is not set"
    exit 1
fi

usage() {
    cat <<__EOF__
usage: `basename $0` \$libname \$hollight_file.ml [\$target.v]

arguments:
  \$libname : desired name for the rocq library
  \$hollight_file.ml: path to an ml file relative to \$HOLLIGHT_DIR
  \$target.v: desired path for the output (default:theory.v)

the order of arguments doesn't matter.

effect in the current directory:
- create a file _CoqProject
- copy files HOL_Light.lp and HOL_Light.v from the hol2dk repository and compile the latter (depends on mathcomp-classical).
- create a subdirectory named output in which the library will be translated
- run hol2dk config and then make opam in this subdirectory
- translate the obtained files into the single file \$target with typeclasses
__EOF__
}

error() {
    echo error: $1
    echo
    usage
    exit 1
}

parse_args() {
    if test $# -ne 0; then
        case $1 in
            *.ml)
                if test -z "$hollight_file"
                then
                    hollight_file=$1
                    shift
                    parse_args $*
                else
                    error 'too many ml files'
                fi;;
            *.v)
                if test -z "$output_file"
                then
                    output_file=$1
                    shift
                    parse_args $*
                else
                    error 'too many v files'
                fi;;
            *)
                if test -z "$libname" 
                then
                    libname=$1
                else
                    error "unexpected argument $1"
                fi;;
        esac
    fi
}

parse_args $*
if test -z "$hollight_file"
then
    error 'missing base hol light file'
fi

if test -z "$output_file"
then 
    output_file="theory.v"
fi

echo create _CoqProject ...
echo "-R . $libname ." > _CoqProject

echo copy basic HOL Light logic ...
cp -f -t . $HOL2DK_DIR/HOL_Light.v $HOL2DK_DIR/HOL_Light.lp

echo create output directory ...
mkdir -p output

echo  configure output directory ...
cd output
$HOL2DK_DIR/config $hollight_file $libname ../HOL_Light.lp ../HOL_Light.v mathcomp.classical.classical_sets

echo translate theorems ...
make clean-v
make opam

echo translate to classes ...
filenoml=`basename $hollight_file .ml`
cd ..
hol2dk to-classes $output_file $filenoml

echo compile HOL_Light.v ...
rocq compile -q -no-glob -w none -R . $libname HOL_Light.v

echo compile theory file ...
rocq compile -q -no-glob -w none -R . $libname $output_file